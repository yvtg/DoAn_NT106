<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="otpTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tA4AAAAASUVORK5CYII=
</value>
  </data>
</root>