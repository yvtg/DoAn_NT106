<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="otpTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>